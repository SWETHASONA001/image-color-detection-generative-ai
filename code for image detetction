import cv2
import numpy as np
from PIL import Image
from IPython.display import display

def detect_color(image):
    # Convert the BGR image to HSV
    hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)

    # Define the lower and upper bounds for the color you want to detect (red in this case)
    lower_red = np.array([0, 100, 100])
    upper_red = np.array([10, 255, 255])

    # Create a mask using inRange function to extract the color from the image
    mask = cv2.inRange(hsv, lower_red, upper_red)
   
    # Bitwise-AND the original image and the mask to get the result
    result = cv2.bitwise_and(image, image, mask=mask)

    return result

if __name__ == "__main__":
    # Replace 'your_image_path.jpg' with the path to your image
    image = cv2.imread('tester1.png')

    if image is None:
        print("Error: Unable to load the image.")
    else:
        detected_color = detect_color(image)

        cv2.imshow('Original Image', image)
        img =Image.fromarray(image)
        cv2.imshow('Detected Color', detected_color)
        display(img)
